{"version":3,"sources":["components/Calculator/index.jsx","components/Calculator2/index.jsx","App.js","index.js"],"names":["Calculator","inputHandler","e","setState","target","name","value","onZnak","znakValue","onSolve","state","result","parseInt","num1","num2","type","this","onChange","className","onClick","React","Component","Calculator2","useState","znak","inputValues","setInputValues","setResult","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff980696.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Calc.css'\r\nexport class Calculator extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            num1: '2',\r\n            znakValue: '+',\r\n            num2: '2',\r\n            result: 0\r\n        }\r\n    }\r\n    inputHandler = (e) => {\r\n        this.setState(() => ({[e.target.name]: e.target.value}))//это чтобы каждый раз значение в инпуте обновлялось  \r\n    }\r\n    onZnak= (e) => {\r\n        this.setState(() => ({znakValue: e.target.value}))\r\n    }\r\n    onSolve = () => {\r\n        switch(this.state.znakValue){\r\n            case '+':\r\n                this.setState(()=>({result: parseInt(this.state.num1) + parseInt(this.state.num2)}));\r\n                break;\r\n            case '-':\r\n                this.setState(()=>({result: parseInt(this.state.num1) - parseInt(this.state.num2)}));\r\n                break;\r\n            case '*':\r\n                this.setState(()=>({result: parseInt(this.state.num1) * parseInt(this.state.num2)}));\r\n                break;\r\n            case '/':\r\n                this.setState(()=>({result: parseInt(this.state.num1) / parseInt(this.state.num2)}));\r\n                break;\r\n            case '**':\r\n                this.setState(()=>({result: parseInt(this.state.num1) ** parseInt(this.state.num2)}));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    render() {\r\n        return <div>\r\n            <h1>Calculator</h1>\r\n            <input \r\n                type=\"text\" \r\n                value={this.state.num1} \r\n                onChange={this.inputHandler}\r\n                name=\"num1\"\r\n                />\r\n            <input type=\"text\" className=\"znak\" value={this.state.znakValue} onChange={this.onZnak}/>\r\n            <input \r\n                type=\"text\" \r\n                value={this.state.num2} \r\n                onChange={this.inputHandler}\r\n                name=\"num2\"\r\n                />\r\n            <button onClick={this.onSolve}>=</button>\r\n            <span>Result:{this.state.result}</span>\r\n        </div>\r\n    }\r\n}","import React, {useState} from 'react'\r\n\r\n//Функциональный компонент,функция аркылуу жасалган калькулятор\r\nexport const Calculator2 = () => {\r\n    const [inputValues, setInputValues] = useState({//hook\r\n        num1: 2,\r\n        num2: 2,\r\n        znak: '+',\r\n        result: 0\r\n    })\r\n\r\n    const [result, setResult] = useState(inputValues.result)\r\n\r\n    const inputHandler = (e) => {\r\n        setInputValues({...inputValues,[e.target.name]: e.target.value})\r\n    }\r\n    const onSolve = () => {\r\n        switch(inputValues.znak){\r\n            case '+':\r\n                setResult(parseInt(inputValues.num1) + parseInt(inputValues.num2))\r\n                break;\r\n            case '-':\r\n                setResult(parseInt(inputValues.num1) - parseInt(inputValues.num2))\r\n                break;\r\n            case '*':\r\n                setResult(parseInt(inputValues.num1) * parseInt(inputValues.num2))\r\n                break;\r\n            case '/':\r\n                setResult(parseInt(inputValues.num1) / parseInt(inputValues.num2))\r\n                break;\r\n            case '**':\r\n                setResult(parseInt(inputValues.num1) ** parseInt(inputValues.num2))\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Calculator2</h1>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValues.num1}\r\n                onChange={inputHandler}\r\n                name=\"num1\"\r\n                />\r\n            <input \r\n                type=\"text\"\r\n                value={inputValues.znak}\r\n                onChange={inputHandler}\r\n                name=\"znak\" \r\n                className=\"znak\"/>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValues.num2}\r\n                onChange={inputHandler}\r\n                name=\"num2\"\r\n                />\r\n            <button onClick={onSolve}>=</button>\r\n            <span value={inputValues.result} onChange={inputHandler}>Result:{result}</span>\r\n        </div>\r\n    )\r\n}","import { Calculator } from './components/Calculator'\nimport { Calculator2 } from './components/Calculator2'\nexport const App = () => {\n  return (\n    <div className=\"App\">\n      <Calculator />\n      <Calculator2 />\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}